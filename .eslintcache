[{"/Users/ronezra/Projects/new-project/my-app/src/index.js":"1","/Users/ronezra/Projects/new-project/my-app/src/App.js":"2","/Users/ronezra/Projects/new-project/my-app/src/Item.js":"3"},{"size":221,"mtime":1608546433993,"results":"4","hashOfConfig":"5"},{"size":1515,"mtime":1608717094927,"results":"6","hashOfConfig":"5"},{"size":240,"mtime":1608558697255,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"1mrwwwq",{"filePath":"11","messages":"12","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ronezra/Projects/new-project/my-app/src/index.js",[],["15","16"],"/Users/ronezra/Projects/new-project/my-app/src/App.js",["17","18","19","20"],"/Users/ronezra/Projects/new-project/my-app/src/Item.js",[],{"ruleId":"21","replacedBy":"22"},{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","severity":1,"message":"26","line":23,"column":9,"nodeType":"27","endLine":23,"endColumn":34},{"ruleId":"28","severity":1,"message":"29","line":24,"column":10,"nodeType":"30","messageId":"31","endLine":24,"endColumn":15},{"ruleId":"28","severity":1,"message":"32","line":24,"column":17,"nodeType":"30","messageId":"31","endLine":24,"endColumn":25},{"ruleId":"33","severity":1,"message":"34","line":65,"column":38,"nodeType":"35","messageId":"36","endLine":65,"endColumn":40},"no-native-reassign",["37"],"no-negated-in-lhs",["38"],"react-hooks/exhaustive-deps","The 'namesFromServer' array makes the dependencies of useEffect Hook (at line 36) change on every render. To fix this, wrap the initialization of 'namesFromServer' in its own useMemo() Hook.","VariableDeclarator","no-unused-vars","'names' is assigned a value but never used.","Identifier","unusedVar","'setNames' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]